(* vim: set nowrap: -*- truncate-lines: t -*- *)

let input = [(1000,1000);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(500,500);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,1000);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,1000);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,1000);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,500);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,500);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(1000,500);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,1000);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,1000);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,500);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,1000);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,1000);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,500);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(500,0);(0,1000);(1000,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,500);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,1000);(500,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,500);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,1000);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,500);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0);(0,0);(0,0);(0,0);(0,0);(1000,1000);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,1000);(0,0);(1000,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(0,0);(500,0)]

(* Assumes that milk is purchased in multiples of 100 *)
let rec expireMilk = function
  | []            -> []
  | (5, _)  :: xs -> expireMilk xs
  | (_, 0)  :: xs -> expireMilk xs
  | (d, ml) :: xs -> (d + 1, ml) :: expireMilk xs

let useMilk = function
  | (d, ml) :: xs -> expireMilk ((d, ml - 100) :: xs)
  | []            -> failwith "no milk"

let rec step (m, c) (dm, dc) =
  if m == [] then (expireMilk [(0, dm)], c + dc)
  else if c + dc >= 100 then (useMilk (m @ [(0, dm)]), c + dc - 100)
  else (expireMilk (m @ [(0, dm)]), c + dc)

let answer = match List.fold_left step ([], 0) input with
    (milk, cereal) -> (List.map snd milk |> List.fold_left (+) 0) + cereal
